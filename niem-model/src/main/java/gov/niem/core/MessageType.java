//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.01.02 at 04:56:07 PM EST 
//


package gov.niem.core;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import gov.niem.adapters.xs.String;
import gov.niem.utility.structures.ObjectType;


/**
 * A data type for an electronic form of communication that can be exchanged asynchronously.
 * 
 * <p>Java class for MessageType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MessageType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://release.niem.gov/niem/structures/5.0/}ObjectType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageRecipientAbstract" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageSenderAbstract" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageSentDate" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageSubjectText" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageText" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageAttachmentAbstract" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}MessageCategoryAbstract" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;anyAttribute processContents='lax' namespace='urn:us:gov:ic:ntk urn:us:gov:ic:ism'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MessageType", namespace = "http://release.niem.gov/niem/niem-core/5.0/", propOrder = {
    "messageID",
    "messageRecipientAbstract",
    "messageSenderAbstract",
    "messageSentDate",
    "messageSubjectText",
    "messageText",
    "messageAttachmentAbstract",
    "messageCategoryAbstract"
})
public class MessageType
    extends ObjectType
{

    @XmlElement(name = "MessageID", namespace = "http://release.niem.gov/niem/niem-core/5.0/", nillable = true)
    protected List<String> messageID;
    @XmlElementRef(name = "MessageRecipientAbstract", namespace = "http://release.niem.gov/niem/niem-core/5.0/", type = JAXBElement.class, required = false)
    protected List<JAXBElement<?>> messageRecipientAbstract;
    @XmlElementRef(name = "MessageSenderAbstract", namespace = "http://release.niem.gov/niem/niem-core/5.0/", type = JAXBElement.class, required = false)
    protected List<JAXBElement<?>> messageSenderAbstract;
    @XmlElement(name = "MessageSentDate", namespace = "http://release.niem.gov/niem/niem-core/5.0/", nillable = true)
    protected List<DateType> messageSentDate;
    @XmlElement(name = "MessageSubjectText", namespace = "http://release.niem.gov/niem/niem-core/5.0/", nillable = true)
    protected List<TextType> messageSubjectText;
    @XmlElement(name = "MessageText", namespace = "http://release.niem.gov/niem/niem-core/5.0/", nillable = true)
    protected List<TextType> messageText;
    @XmlElementRef(name = "MessageAttachmentAbstract", namespace = "http://release.niem.gov/niem/niem-core/5.0/", type = JAXBElement.class, required = false)
    protected List<JAXBElement<?>> messageAttachmentAbstract;
    @XmlElementRef(name = "MessageCategoryAbstract", namespace = "http://release.niem.gov/niem/niem-core/5.0/", type = JAXBElement.class, required = false)
    protected List<JAXBElement<?>> messageCategoryAbstract;

    /**
     * Gets the value of the messageID property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageID property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageID().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getMessageID() {
        if (messageID == null) {
            messageID = new ArrayList<String>();
        }
        return this.messageID;
    }

    /**
     * Gets the value of the messageRecipientAbstract property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageRecipientAbstract property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageRecipientAbstract().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link EntityType }{@code >}
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getMessageRecipientAbstract() {
        if (messageRecipientAbstract == null) {
            messageRecipientAbstract = new ArrayList<JAXBElement<?>>();
        }
        return this.messageRecipientAbstract;
    }

    /**
     * Gets the value of the messageSenderAbstract property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageSenderAbstract property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageSenderAbstract().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link EntityType }{@code >}
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getMessageSenderAbstract() {
        if (messageSenderAbstract == null) {
            messageSenderAbstract = new ArrayList<JAXBElement<?>>();
        }
        return this.messageSenderAbstract;
    }

    /**
     * Gets the value of the messageSentDate property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageSentDate property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageSentDate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DateType }
     * 
     * 
     */
    public List<DateType> getMessageSentDate() {
        if (messageSentDate == null) {
            messageSentDate = new ArrayList<DateType>();
        }
        return this.messageSentDate;
    }

    /**
     * Gets the value of the messageSubjectText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageSubjectText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageSubjectText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getMessageSubjectText() {
        if (messageSubjectText == null) {
            messageSubjectText = new ArrayList<TextType>();
        }
        return this.messageSubjectText;
    }

    /**
     * Gets the value of the messageText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    public List<TextType> getMessageText() {
        if (messageText == null) {
            messageText = new ArrayList<TextType>();
        }
        return this.messageText;
    }

    /**
     * Gets the value of the messageAttachmentAbstract property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageAttachmentAbstract property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageAttachmentAbstract().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * {@link JAXBElement }{@code <}{@link BinaryType }{@code >}
     * {@link JAXBElement }{@code <}{@link ImageType }{@code >}
     * {@link JAXBElement }{@code <}{@link DocumentType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getMessageAttachmentAbstract() {
        if (messageAttachmentAbstract == null) {
            messageAttachmentAbstract = new ArrayList<JAXBElement<?>>();
        }
        return this.messageAttachmentAbstract;
    }

    /**
     * Gets the value of the messageCategoryAbstract property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messageCategoryAbstract property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessageCategoryAbstract().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link TextType }{@code >}
     * {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getMessageCategoryAbstract() {
        if (messageCategoryAbstract == null) {
            messageCategoryAbstract = new ArrayList<JAXBElement<?>>();
        }
        return this.messageCategoryAbstract;
    }

}
